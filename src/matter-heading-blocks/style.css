@import 'normalize.css' layer(normalize);

@font-face {
  font-family: 'Humane Bold';
  src: url('https://assets.codepen.io/605876/Humane-VF.ttf');
}

@layer normalize, base, demo;

@layer demo {
  body {
    align-content: start;
    height: 150vh;
  }

  @media (pointer: coarse) {
    [data-interactive='false'] header {
      pointer-events: none;
    }
  }

  main {
    height: 100vh;
    display: grid;
    place-items: center;
  }

  footer {
    padding: 1rem;
  }

  h1,
  h2 {
    --font-level: 8;
    text-wrap: balance;
    margin: 0;
    line-height: 0.8;
    letter-spacing: 0.1ch;
    font-family: 'Humane Bold', sans-serif;
    text-transform: uppercase;
    font-weight: 600;
  }

  ::selection {
    background: hsl(280 80% 60% / 0);
  }

  canvas {
    /* background: hsl(0 0% 0% / 0.2); */
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    animation: fade-away both linear;
    animation-timeline: view();
    animation-range: exit 0% exit 50%;
  }

  @keyframes fade-away {
    to {
      opacity: 0;
    }
  }

  main {
    view-timeline: --main;
  }

  @property --flip {
    inherits: true;
    syntax: '<integer>';
    initial-value: 0;
  }

  h2 {
    animation: show both linear;
    animation-timeline: view();
    animation-range: cover;
    clip-path: inset(0 0 0 0);
  }

  h2 > span:first-of-type {
    --font-level: 7.41;
    opacity: calc(1 - (var(--flip) * 0.8));
    transition: opacity 0.5s
      linear(
        0 0%,
        0.0036 9.62%,
        0.0185 16.66%,
        0.0489 23.03%,
        0.0962 28.86%,
        0.1705 34.93%,
        0.269 40.66%,
        0.3867 45.89%,
        0.5833 52.95%,
        0.683 57.05%,
        0.7829 62.14%,
        0.8621 67.46%,
        0.8991 70.68%,
        0.9299 74.03%,
        0.9545 77.52%,
        0.9735 81.21%,
        0.9865 85%,
        0.9949 89.15%,
        1 100%
      );
  }

  h2 .char {
    translate: 0 calc((1 - var(--flip)) * 1.2lh);
    transition: translate 0.5s
      calc(sin(var(--char-index) / var(--char-total) * 45deg) * 0.5s)
      linear(
        0 0%,
        0.0036 9.62%,
        0.0185 16.66%,
        0.0489 23.03%,
        0.0962 28.86%,
        0.1705 34.93%,
        0.269 40.66%,
        0.3867 45.89%,
        0.5833 52.95%,
        0.683 57.05%,
        0.7829 62.14%,
        0.8621 67.46%,
        0.8991 70.68%,
        0.9299 74.03%,
        0.9545 77.52%,
        0.9735 81.21%,
        0.9865 85%,
        0.9949 89.15%,
        1 100%
      );
  }

  @keyframes show {
    to {
      --flip: 1;
    }
  }

  [data-theme='dark'] canvas {
    filter: brightness(0.8);
  }
  @media (prefers-color-scheme: dark) {
    [data-theme='system'] canvas {
      filter: brightness(0.8);
    }
  }

  .icons {
    display: none;
  }

  header {
    width: 100svw;
    height: 100svh;
    display: grid;
    place-items: center;
    align-content: end;
    padding-bottom: 15svmin;
    position: relative;
  }

  .block {
    /* display: none; */
    width: 60px;
    aspect-ratio: 1;
    background: red;
    position: absolute;
    left: calc(var(--l) * 100%);
    top: calc(var(--t) * 100%);
  }

  [data-debug='true'] .content .word {
    outline: 4px dashed red;
  }

  .word,
  .char {
    display: inline-block;
    line-height: 0.75;
  }

  .content {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 800px;
    max-width: calc(100vw - 2rem);
  }
  .content p {
    --font-level: 0.75;
    text-wrap: balance;
  }
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in lch, canvasText, transparent 70%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        50% 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
        var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}

div.tp-dfwv {
  position: fixed;
  width: 290px;
}

.unlock {
  position: fixed;
  z-index: 99999;
  left: 1rem;
  bottom: 1rem;
  width: 44px;
  aspect-ratio: 1;
  border-radius: 12px;
  color: canvas;
  background: canvasText;
  cursor: pointer;
  scale: 0;
  transition: scale 0.5s;
  svg {
    width: 75%;
  }
}

[data-interactive='true'] .unlock {
  scale: 1;
}
