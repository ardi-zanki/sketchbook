@import 'normalize.css' layer(normalize);
/* @import url('https://unpkg.com/normalize.css') layer(normalize); */

@layer normalize, base, demo;

@layer demo {
  .header__content {
    display: flex;
    align-items: flex-end;
    justify-content: flex-start;
    padding: 2rem;
    min-height: 100vh;
  }
  h1 {
    --font-level: 6;
    display: inline-block;
    margin: 0;
    z-index: -1;
  }

  header section {
    pointer-events: none;
    height: 100vh;
    width: 100%;
    position: sticky;
    bottom: 0%;
    z-index: 2;
    overflow: visible;
    width: 80%;
    border: 4px solid red;
    margin: 0 auto;
    container-type: inline-size;
  }
  main {
    height: 100vh;
  }

  .pac {
    --font-size-min: 10;
    --font-size-max: 20;
    --font-level: 1;
    height: 8cqi;
    aspect-ratio: 1;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 0;
    translate: calc(-100% - 2cqi) -50%;
    z-index: 2;
    animation: slide both linear;
    animation-timeline: --header;
    animation-range: entry-crossing 50% entry-crossing 90%;
  }

  @keyframes slide {
    100% {
      translate: 102cqw -50%;
    }
  }

  .pac::before,
  .pac::after {
    content: '';
    background: yellow;
    position: absolute;
    border-radius: 50%;
    inset: 0;
    animation: chomp both linear calc((100 / 8) + 1);
    animation-timeline: --header;
    animation-range: entry-crossing 50% entry-crossing 90%;
  }

  .pac::before {
    --open: -50deg;
    clip-path: inset(0 0 50% 0);
  }
  .pac::after {
    --open: 50deg;
    clip-path: inset(50% 0 0 0);
  }

  @keyframes chomp {
    50% {
      rotate: var(--open);
    }
  }

  header {
    view-timeline: --header;
  }

  .track {
    --font-size-min: 6;
    --font-size-max: 20;
    --font-level: 1;
    height: 1cqi;
    width: 100%;
    background: linear-gradient(
          90deg,
          #0000 calc(50% - 0.5cqi),
          hsl(0 0% 100% / 0.5) calc(50% - 0.5cqi) calc(50% + 0.5cqi),
          #0000 calc(50% + 0.5cqi)
        )
        50% 0 / 8cqi 100%,
      linear-gradient(
          90deg,
          blue 0 2px,
          #0000 2px calc(100% - 2px),
          blue calc(100% - 2px) 100%
        )
        50% 0 / 8cqi 100%,
      hsl(0 0% 100% / 0);
    position: absolute;
    top: 50%;
    translate: 0 -50%;
    /*     animation: clip both linear; */
    animation-timeline: --header;
    animation-range: entry-crossing 50% entry-crossing 90%;
    clip-path: inset(0 0 0 0em);
  }
  @keyframes clip {
    to {
      clip-path: inset(0 0 0 calc(100% + 0em));
    }
  }
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in lch, canvasText, transparent 70%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        50% 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
        var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}

div.tp-dfwv {
  position: fixed;
}
